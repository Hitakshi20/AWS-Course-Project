AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function to log S3 uploads to CloudWatch

Parameters:
  S3Bucket:
    Type: String

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaS3LoggerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3LogPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:aws:s3:::${S3Bucket}/*

  S3LoggerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: S3UploadLogger
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      Code:
        ZipFile: |
          import json
          import logging

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)

          def lambda_handler(event, context):
              bucket = event['Records'][0]['s3']['bucket']['name']
              key = event['Records'][0]['s3']['object']['key']
              log_message = f"New file uploaded: {key} in bucket: {bucket}"
              logger.info(log_message)
              return {
                  'statusCode': 200,
                  'body': json.dumps(log_message)
              }

  S3Trigger:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref S3LoggerFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${S3Bucket}
